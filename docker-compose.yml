version: "3.7"

services:
  api-gateway:
    hostname: api-gateway
    build:
      context: api-gateway
      args:
        APP_ENV: development
    image: fiuber.api-gateway:dev
    container_name: fiuber.api-gateway.dev
    volumes:
      - ./api-gateway/src:/opt/app/src
      - ./api-gateway/test:/opt/app/test
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - NODE_ENV=development
    networks:
      - fiuber
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    stdin_open: true
    tty: true
    depends_on:
      - service-users
    command: "bash -c 'npm run dev-start'"
  
  service-auth:
    hostname: service-auth
    build:
      context: service-auth
      args:
        APP_ENV: development
    image: fiuber.service-auth:dev
    container_name: fiuber.service-auth.dev
    volumes:
      - ./service-auth/src:/opt/app/src
      - ./service-auth/test:/opt/app/test
    environment:
      - SERVICE_AUTH_HOST=value
      - SERVICE_AUTH_PORT=value
    networks:
      - fiuber
    ports:
      - "${SERVICE_AUTH_PORT}:${SERVICE_AUTH_PORT}"
    stdin_open: true
    tty: true
    command: bash
    
  service-users:
    hostname: service-users
    build:
      context: service-users
      args:
        APP_ENV: development
    image: fiuber.service-users:dev
    container_name: fiuber.service-users.dev
    volumes:
      - ./service-users/src:/opt/app/src
      - ./service-users/test:/opt/app/test
      - ./service-users/alembic:/opt/app/alembic
    environment:
      - SERVICE_USERS_HOST=${SERVICE_USERS_HOST}
      - SERVICE_USERS_PORT=${SERVICE_USERS_PORT}
      - DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${DATABASE_NAME}
    networks:
      - fiuber
    ports:
      - "${SERVICE_USERS_PORT}:${SERVICE_USERS_PORT}"
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    depends_on:
      - dev-db
    # There must be better ways to do this ...
    command: "bash -c 'sleep 5 && alembic upgrade head && python3 -m uvicorn src.entrypoints.http.fastapi_api:app --host=$${SERVICE_USERS_HOST} --port=$${SERVICE_USERS_PORT} --reload'"
  
  dev-db:
    image: postgres:14.5-bullseye
    container_name: fiuber-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - PGPORT=${POSTGRES_PORT}
      - POSTGRES_DB=${DATABASE_NAME}
    networks:
      - fiuber
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"

networks:
  fiuber:
    driver: bridge
    name: fiuber
